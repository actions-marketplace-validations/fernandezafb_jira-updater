(()=>{var __webpack_modules__={834:(e,s,t)=>{const r=t(48);const o=t(144);e.exports=class{constructor({githubEvent:e,argv:s,config:t}){this.Jira=new o({baseUrl:t.baseUrl,token:t.token,email:t.email});this.config=t;this.argv=s;this.githubEvent=e}async execute(){const{argv:e}=this;const s=e.issue;const t=e.fixVersions;await this.Jira.updateIssueFixVersions(s,t);console.log(`Updated ${s} fixVersions field to: ${t}`);return{}}}},144:(e,s,t)=>{const{get:r}=t(48);const o="jira";const{format:i}=t(310);const n=t(818)(o);class Jira{constructor({baseUrl:e,token:s,email:t}){this.baseUrl=e;this.token=s;this.email=t}async getIssue(e,s={}){const{fields:t=[],expand:o=[]}=s;try{return this.fetch("getIssue",{pathname:`/rest/api/2/issue/${e}`,query:{fields:t.join(","),expand:o.join(",")}})}catch(e){if(r(e,"res.status")===404){return}throw e}}async updateIssueFixVersions(e,s){return this.fetch("updateIssueFixVersions",{pathname:`/rest/api/3/issue/${e}`},{method:"PUT",body:{update:{fixVersions:[{set:[{name:s}]}]}}})}async getIssueTransitions(e){return this.fetch("getIssueTransitions",{pathname:`/rest/api/2/issue/${e}/transitions`},{method:"GET"})}async transitionIssue(e,s){return this.fetch("transitionIssue",{pathname:`/rest/api/3/issue/${e}/transitions`},{method:"POST",body:s})}async fetch(e,{host:s,pathname:t,query:r},{method:a,body:c,headers:u={}}={}){const _=i({host:s||this.baseUrl,pathname:t,query:r});if(!a){a="GET"}if(u["Content-Type"]===undefined){u["Content-Type"]="application/json"}if(u.Authorization===undefined){u.Authorization=`Basic ${Buffer.from(`${this.email}:${this.token}`).toString("base64")}`}if(c&&u["Content-Type"]==="application/json"){c=JSON.stringify(c)}const p={req:{method:a,headers:u,body:c,url:_}};try{await n(p,`${o}:${e}`)}catch(e){const s={originError:e,source:"jira"};delete p.req.headers;throw Object.assign(new Error("Jira API error"),p,s)}return p.res.body}}e.exports=Jira},818:(e,s,t)=>{const r=t(848);e.exports=e=>async(e,s="unknown")=>{const t=await r(e.req.url,e.req);e.res={headers:t.headers.raw(),status:t.status};e.res.body=await t.text();const o=(t.headers.get("content-type")||"").includes("application/json");if(o&&e.res.body){e.res.body=JSON.parse(e.res.body)}if(!t.ok){throw new Error(t.statusText)}return e}},450:module=>{module.exports=eval("require")("@actions/core")},48:module=>{module.exports=eval("require")("lodash")},848:module=>{module.exports=eval("require")("node-fetch")},778:module=>{module.exports=eval("require")("yaml")},147:e=>{"use strict";e.exports=require("fs")},310:e=>{"use strict";e.exports=require("url")}};var __webpack_module_cache__={};function __nccwpck_require__(e){var s=__webpack_module_cache__[e];if(s!==undefined){return s.exports}var t=__webpack_module_cache__[e]={exports:{}};var r=true;try{__webpack_modules__[e](t,t.exports,__nccwpck_require__);r=false}finally{if(r)delete __webpack_module_cache__[e]}return t.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{const e=__nccwpck_require__(147);const s=__nccwpck_require__(778);const t=__nccwpck_require__(450);const r=`${process.env.HOME}/jira/config.yml`;const o=__nccwpck_require__(834);const i=require(process.env.GITHUB_EVENT_PATH);const n=s.parse(e.readFileSync(r,"utf8"));async function exec(){try{const t=await new o({githubEvent:i,argv:parseArgs(),config:n}).execute();if(t){const o=Object.assign({},n,t);e.writeFileSync(r,s.stringify(o));return}console.log("Failed to update issue.");process.exit(78)}catch(e){console.error(e);process.exit(1)}}function parseArgs(){return{issue:t.getInput("issue"),fixVersions:t.getInput("fixVersions")}}exec()})();module.exports=__webpack_exports__})();